[{"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\index.js":"1","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\App.js":"2","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\Header.js":"3","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\TaskForm.js":"4","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\TaskList.js":"5","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\Task.js":"6","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\ColorBox.js":"7","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\allColors.js":"8"},{"size":219,"mtime":1609974557993,"results":"9","hashOfConfig":"10"},{"size":1675,"mtime":1609974364226,"results":"11","hashOfConfig":"10"},{"size":951,"mtime":1609963527102,"results":"12","hashOfConfig":"10"},{"size":2509,"mtime":1609885920183,"results":"13","hashOfConfig":"10"},{"size":1434,"mtime":1609974520125,"results":"14","hashOfConfig":"10"},{"size":2667,"mtime":1609974499270,"results":"15","hashOfConfig":"10"},{"size":788,"mtime":1609893435049,"results":"16","hashOfConfig":"10"},{"size":152,"mtime":1609878197676,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1wm0y9o",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\index.js",[],["38","39"],"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\App.js",["40"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport TaskForm from './components/TaskForm'\nimport TaskList from './components/TaskList'\nimport allColors from './components/allColors'\n\nfunction App() {\n  const savedTasks = localStorage.getItem('tasks') ? JSON.parse(localStorage.getItem('tasks')) : []\n\n  const [tasks, changeTasks] = useState(savedTasks)\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([])\n  const [colorSelected, setColorSelected] = useState(allColors.colors[0])\n\n  // Functions\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(tasks.filter((task) => task.completed === true))\n        break\n      case 'uncompleted':\n        setFilteredTodos(tasks.filter((task) => task.completed === false))\n        break\n      default:\n        setFilteredTodos(tasks)\n        break\n    }\n  }\n\n  // useEffect\n  useEffect(() => {\n    filterHandler()\n  }, [tasks, status])\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }, [tasks, status])\n\n  useEffect(() => {\n    localStorage.setItem('completed', JSON.stringify(filteredTodos))\n  }, [filteredTodos])\n\n  return (\n    <div className=\"container\">\n      <Header\n        setStatus={setStatus}\n      />\n      <TaskForm\n        tasks={tasks}\n        changeTasks={changeTasks}\n        colorSelected={colorSelected}\n        setColorSelected={setColorSelected}\n      />\n      <TaskList\n        tasks={tasks}\n        changeTasks={changeTasks}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\Header.js",[],"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\TaskForm.js",[],"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\TaskList.js",["41"],"import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst TaskList = ({ tasks, changeTasks, filteredTodos }) => {\r\n    const toggleCompleted = (id) => {\r\n        changeTasks(tasks.map((task) => {\r\n            if (task.id === id) {\r\n                return { ...task, completed: !task.completed }\r\n            }\r\n            return task\r\n        }))\r\n    }\r\n\r\n    const editTask = (id, newTask) => {\r\n        changeTasks(tasks.map((task) => {\r\n            if (task.id === id) {\r\n                return { ...task, text: newTask }\r\n            }\r\n            return task\r\n        }))\r\n    }\r\n\r\n    const deleteTask = (id) => {\r\n        changeTasks(tasks.filter((task) => {\r\n            if (task.id !== id) {\r\n                return task\r\n            }\r\n            return\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <ul className=\"tasklist\">\r\n            {\r\n                filteredTodos.length > 0 ? filteredTodos.map((task) => {\r\n                    return <Task\r\n                        key={task.id}\r\n                        task={task}\r\n                        toggleCompleted={toggleCompleted}\r\n                        editTask={editTask}\r\n                        deleteTask={deleteTask}\r\n                        color={task.color}\r\n                    />\r\n                })\r\n                    : <div className=\"tasklist__message\">~ No Tasks Added ~</div>\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TaskList;","C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\Task.js",[],["42","43"],"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\ColorBox.js",[],"C:\\Users\\linda\\ReactJS\\proyects\\todo_list_app\\src\\components\\allColors.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":34,"column":6,"nodeType":"50","endLine":34,"endColumn":21,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":28,"column":13,"nodeType":"54","messageId":"55","endLine":28,"endColumn":19},{"ruleId":"44","replacedBy":"56"},{"ruleId":"46","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["60"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["58"],["59"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [tasks, status, filterHandler]",{"range":"63","text":"64"},[1028,1043],"[tasks, status, filterHandler]"]