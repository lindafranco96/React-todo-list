{"version":3,"sources":["components/Header.js","components/ColorBox.js","components/allColors.js","components/TaskForm.js","components/Task.js","components/TaskList.js","App.js","index.js"],"names":["Header","setStatus","className","onChange","e","target","value","name","id","LabelColor","styled","label","color","InputRadio","input","ColorBox","handleChangeColor","isChecked","defaultChecked","type","htmlFor","allColors","colors","ColorsContainer","div","TaskForm","tasks","changeTasks","colorSelected","setColorSelected","useState","inputTask","changeInputTask","action","onSubmit","preventDefault","uuidv4","text","completed","placeholder","handleInput","map","icon","faPlusSquare","TaskContainer","Task","task","toggleCompleted","editTask","deleteTask","editingTask","changeEditingTask","newTask","changeNewTask","faCheckCircle","faCircle","onClick","faEdit","faTimesCircle","TaskList","filteredTodos","filter","length","App","savedTasks","localStorage","getItem","JSON","parse","status","setFilteredTodos","useEffect","filterHandler","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAuBeA,G,MAnBA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAKd,OACI,yBAAQC,UAAU,SAAlB,UACI,oBAAIA,UAAU,gBAAd,wBACA,qBAAKA,UAAU,iBAAf,SACI,yBAAQC,SARE,SAACC,GACnBH,EAAUG,EAAEC,OAAOC,QAOsBC,KAAK,QAAQC,GAAG,GAAGN,UAAU,yBAA9D,UACI,wBAAQI,MAAM,MAAMJ,UAAU,wBAA9B,iBACA,wBAAQI,MAAM,YAAYJ,UAAU,wBAApC,uBACA,wBAAQI,MAAM,cAAcJ,UAAU,wBAAtC,mC,0aCbpB,IAAMO,EAAaC,IAAOC,MAAV,KAKQ,qBAAGC,SAIrBC,EAAaH,IAAOI,MAAV,KAqBDC,EAdE,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOI,EAAV,EAAUA,kBAAmBC,EAA7B,EAA6BA,UAA7B,OACb,qCACI,cAACJ,EAAD,CACIK,eAAgBD,EAChBT,GAAII,EACJO,KAAK,QACLZ,KAAK,QACLJ,SAAU,kBAAMa,EAAkBJ,MAEtC,cAACH,EAAD,CAAYW,QAASR,EAAOA,MAAOA,QCnB5BS,EATG,CACdC,OAAQ,CACJ,UACA,UACA,UACA,Y,4NCGR,IAAMC,EAAkBb,IAAOc,IAAV,KAwENC,EAhEE,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAAuB,EACrCC,mBAAS,IAD4B,mBACnEC,EADmE,KACxDC,EADwD,KA2BpEhB,EAAoB,SAACJ,GACvBiB,EAAiBjB,IAGrB,OACI,uBAAMqB,OAAO,GAAG/B,UAAU,WAAWgC,SAzBpB,SAAC9B,GAClBA,EAAE+B,iBACgB,KAAdJ,IAGAJ,EAAY,GAAD,mBAEAD,GAFA,CAGH,CACIlB,GAAI4B,cACJC,KAAMN,EACNO,WAAW,EACX1B,MAAOgB,MAInBI,EAAgB,MASpB,UACI,uBACIb,KAAK,OACLjB,UAAU,kBACVqC,YAAY,aACZjC,MAAOyB,EACP5B,SAAU,SAACC,GAAD,OAnCF,SAACA,GACjB4B,EAAgB5B,EAAEC,OAAOC,OAkCAkC,CAAYpC,MAEjC,cAACmB,EAAD,UAEQF,EAAUC,OAAOmB,KAAI,SAAC7B,GAAD,OACjB,cAAC,EAAD,CACII,kBAAmBA,EAEnBJ,MAAOA,EACPK,UAAWW,IAAkBhB,GAFxBwB,oBAOrB,qBAAKlC,UAAU,mBAAf,SACI,wBACIiB,KAAK,SACLjB,UAAU,0BAFd,SAII,cAAC,IAAD,CAAiBwC,KAAMC,IAAczC,UAAU,yC,iSCpEnE,IAsDM0C,EAAgBlC,IAAOc,IAAV,KAOK,qBAAGZ,SAMZiC,EAnEF,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,gBAAiBC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,WAAYrC,EAAY,EAAZA,MAAY,EAC5BkB,oBAAS,GADmB,mBAC9DoB,EAD8D,KACjDC,EADiD,OAEpCrB,mBAASgB,EAAKT,MAFsB,mBAE9De,EAF8D,KAErDC,EAFqD,KAUrE,OAEI,cADA,CACCT,EAAD,CAAehC,MAAOA,EAAOV,UAAU,iBAAvC,UACI,cAAC,IAAD,CACIwC,KAAMI,EAAKR,UAAYgB,IAAgBC,IACvCrD,UAAU,sCACVsD,QAAS,kBAAMT,EAAgBD,EAAKtC,OAExC,qBAAKN,UAAU,iBAAf,SAEQgD,EACI,uBAAMjB,OAAO,GAAG/B,UAAU,iBAAiBgC,SAjB1C,SAAC9B,GAClBA,EAAE+B,iBACFa,EAASF,EAAKtC,GAAI4C,GAClBD,GAAkB,IAcF,UACI,uBACIhC,KAAK,OACLjB,UAAU,wBACVI,MAAO8C,EACPjD,SAAU,SAACC,GAAD,OAAOiD,EAAcjD,EAAEC,OAAOC,UAE5C,wBACIa,KAAK,SAASjB,UAAU,sBAD5B,uBAMF4C,EAAKT,OAGnB,sBAAKnC,UAAU,8BAAf,UACI,cAAC,IAAD,CACIwC,KAAMe,IACNvD,UAAU,uCACVsD,QAAS,kBAAML,GAAmBD,MAEtC,cAAC,IAAD,CACIR,KAAMgB,IACNxD,UAAU,uCACVsD,QAAS,kBAAMP,EAAWH,EAAKtC,cCDpCmD,EA/CE,SAAC,GAA2C,IAAzCjC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAaiC,EAAoB,EAApBA,cAC9Bb,EAAkB,SAACvC,GACrBmB,EAAYD,EAAMe,KAAI,SAACK,GACnB,OAAIA,EAAKtC,KAAOA,EACL,2BAAKsC,GAAZ,IAAkBR,WAAYQ,EAAKR,YAEhCQ,OAITE,EAAW,SAACxC,EAAI4C,GAClBzB,EAAYD,EAAMe,KAAI,SAACK,GACnB,OAAIA,EAAKtC,KAAOA,EACL,2BAAKsC,GAAZ,IAAkBT,KAAMe,IAErBN,OAITG,EAAa,SAACzC,GAChBmB,EAAYD,EAAMmC,QAAO,SAACf,GACtB,GAAIA,EAAKtC,KAAOA,EACZ,OAAOsC,OAMnB,OACI,oBAAI5C,UAAU,WAAd,SAEQ0D,EAAcE,OAAS,EAAIF,EAAcnB,KAAI,SAACK,GAC1C,OAAO,cAAC,EAAD,CAEHA,KAAMA,EACNC,gBAAiBA,EACjBC,SAAUA,EACVC,WAAYA,EACZrC,MAAOkC,EAAKlC,OALPkC,EAAKtC,OAQZ,qBAAKN,UAAU,oBAAf,mCCmBP6D,MAxDf,WACE,IAAMC,EAAaC,aAAaC,QAAQ,SAAWC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,GADlF,EAGgBpC,mBAASkC,GAHzB,mBAGNtC,EAHM,KAGCC,EAHD,OAIeG,mBAAS,OAJxB,mBAINuC,EAJM,KAIEpE,EAJF,OAK6B6B,mBAAS,IALtC,mBAKN8B,EALM,KAKSU,EALT,OAM6BxC,mBAAST,EAAUC,OAAO,IANvD,mBAMNM,EANM,KAMSC,EANT,KAoCb,OAZA0C,qBAAU,YAfY,WACpB,OAAQF,GACN,IAAK,YACHC,EAAiB5C,EAAMmC,QAAO,SAACf,GAAD,OAA6B,IAAnBA,EAAKR,cAC7C,MACF,IAAK,cACHgC,EAAiB5C,EAAMmC,QAAO,SAACf,GAAD,OAA6B,IAAnBA,EAAKR,cAC7C,MACF,QACEgC,EAAiB5C,IAOrB8C,KACC,CAAC9C,EAAO2C,IAEXE,qBAAU,WACRN,aAAaQ,QAAQ,QAASN,KAAKO,UAAUhD,MAC5C,CAACA,EAAO2C,IAEXE,qBAAU,WACRN,aAAaQ,QAAQ,YAAaN,KAAKO,UAAUd,MAChD,CAACA,IAGF,sBAAK1D,UAAU,YAAf,UACE,cAAC,EAAD,CACED,UAAWA,IAEb,cAAC,EAAD,CACEyB,MAAOA,EACPC,YAAaA,EACbC,cAAeA,EACfC,iBAAkBA,IAEpB,cAAC,EAAD,CACEH,MAAOA,EACPC,YAAaA,EACbiC,cAAeA,QCpDvBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2e122794.chunk.js","sourcesContent":["import React from 'react'\r\n/* import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEyeSlash, faCheckCircle } from '@fortawesome/free-solid-svg-icons' */\r\n\r\nconst Header = ({ setStatus }) => {\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">To-Do List</h1>\r\n            <div className=\"header__select\">\r\n                <select onChange={statusHandler} name=\"todos\" id=\"\" className=\"header__select-options\">\r\n                    <option value=\"all\" className=\"header__select-option\">All</option>\r\n                    <option value=\"completed\" className=\"header__select-option\">Completed</option>\r\n                    <option value=\"uncompleted\" className=\"header__select-option\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst LabelColor = styled.label`\r\n    display:inline-block;\r\n    width:40px;\r\n    height:40px;\r\n    margin-top:.5rem;\r\n    background-color: ${({ color }) => color};\r\n    border-radius: 5px;\r\n`\r\n\r\nconst InputRadio = styled.input`\r\n    display:none;\r\n    &:checked + label{\r\n        border: 4px solid rgba(219, 57, 57, 0.25);\r\n    }\r\n`\r\n\r\nconst ColorBox = ({ color, handleChangeColor, isChecked }) => (\r\n    <>\r\n        <InputRadio\r\n            defaultChecked={isChecked}\r\n            id={color}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => handleChangeColor(color)}\r\n        />\r\n        <LabelColor htmlFor={color} color={color}></LabelColor>\r\n    </>\r\n\r\n)\r\n\r\nexport default ColorBox","const allColors = {\r\n    colors: [\r\n        '#C4C4C4',\r\n        '#FC6C6C',\r\n        '#CD8DE3',\r\n        '#9BADEA',\r\n    ]\r\n}\r\n\r\nexport default allColors","import React, { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport ColorBox from './ColorBox'\r\nimport allColors from './allColors'\r\nimport styled from 'styled-components'\r\n\r\nconst ColorsContainer = styled.div`\r\n        width: 200px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin: 0 auto .5rem;\r\n`\r\n\r\nconst TaskForm = ({ tasks, changeTasks, colorSelected, setColorSelected }) => {\r\n    const [inputTask, changeInputTask] = useState('')\r\n\r\n    const handleInput = (e) => {\r\n        changeInputTask(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputTask === '') {\r\n            return\r\n        } else {\r\n            changeTasks(\r\n                [\r\n                    ...tasks,\r\n                    {\r\n                        id: uuidv4(),\r\n                        text: inputTask,\r\n                        completed: false,\r\n                        color: colorSelected\r\n                    }\r\n                ]\r\n            )\r\n            changeInputTask('')\r\n        }\r\n    }\r\n\r\n    const handleChangeColor = (color) => {\r\n        setColorSelected(color)\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" className=\"taskform\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"taskform__input\"\r\n                placeholder=\"Enter Task\"\r\n                value={inputTask}\r\n                onChange={(e) => handleInput(e)}\r\n            />\r\n            <ColorsContainer>\r\n                {\r\n                    allColors.colors.map((color) => (\r\n                        <ColorBox\r\n                            handleChangeColor={handleChangeColor}\r\n                            key={uuidv4()}\r\n                            color={color}\r\n                            isChecked={colorSelected === color}\r\n                        />\r\n                    ))\r\n                }\r\n            </ColorsContainer>\r\n            <div className=\"taskform__submit\">\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"taskform__submit-button\"\r\n                >\r\n                    <FontAwesomeIcon icon={faPlusSquare} className=\"taskform__submit-button-icon\" />\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\nimport { faCheckCircle, faEdit, faTimesCircle, faCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Task = ({ task, toggleCompleted, editTask, deleteTask, color }) => {\r\n    const [editingTask, changeEditingTask] = useState(false)\r\n    const [newTask, changeNewTask] = useState(task.text)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        editTask(task.id, newTask)\r\n        changeEditingTask(false)\r\n    }\r\n\r\n    return (\r\n        // <li className=\"tasklist__task\">\r\n        <TaskContainer color={color} className=\"tasklist__task\">\r\n            <FontAwesomeIcon\r\n                icon={task.completed ? faCheckCircle : faCircle}\r\n                className=\"tasklist__icon tasklist__icon-check\"\r\n                onClick={() => toggleCompleted(task.id)}\r\n            />\r\n            <div className=\"tasklist__text\">\r\n                {\r\n                    editingTask ?\r\n                        <form action=\"\" className=\"form-edit-task\" onSubmit={handleSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-edit-task__input\"\r\n                                value={newTask}\r\n                                onChange={(e) => changeNewTask(e.target.value)}\r\n                            />\r\n                            <button\r\n                                type=\"submit\" className=\"form-edit-task__btn\"\r\n                            >\r\n                                Update\r\n                            </button>\r\n                        </form>\r\n                        : task.text\r\n                }\r\n            </div>\r\n            <div className=\"tasklist__container-buttons\">\r\n                <FontAwesomeIcon\r\n                    icon={faEdit}\r\n                    className=\"tasklist__icon tasklist__icon-action\"\r\n                    onClick={() => changeEditingTask(!editingTask)}\r\n                />\r\n                <FontAwesomeIcon\r\n                    icon={faTimesCircle}\r\n                    className=\"tasklist__icon tasklist__icon-action\"\r\n                    onClick={() => deleteTask(task.id)}\r\n                />\r\n            </div>\r\n        </TaskContainer>\r\n        // </li>\r\n    );\r\n}\r\n\r\nconst TaskContainer = styled.div`\r\n    padding: 20px;\r\n    margin: 0 20px 10px 20px;\r\n    font-size: 20px;\r\n    color: #4B4B4B;\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    background-color: ${({ color }) => color};\r\n    border-radius: 5px;\r\n`\r\n\r\n\r\n\r\nexport default Task;","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst TaskList = ({ tasks, changeTasks, filteredTodos }) => {\r\n    const toggleCompleted = (id) => {\r\n        changeTasks(tasks.map((task) => {\r\n            if (task.id === id) {\r\n                return { ...task, completed: !task.completed }\r\n            }\r\n            return task\r\n        }))\r\n    }\r\n\r\n    const editTask = (id, newTask) => {\r\n        changeTasks(tasks.map((task) => {\r\n            if (task.id === id) {\r\n                return { ...task, text: newTask }\r\n            }\r\n            return task\r\n        }))\r\n    }\r\n\r\n    const deleteTask = (id) => {\r\n        changeTasks(tasks.filter((task) => {\r\n            if (task.id !== id) {\r\n                return task\r\n            }\r\n            return\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <ul className=\"tasklist\">\r\n            {\r\n                filteredTodos.length > 0 ? filteredTodos.map((task) => {\r\n                    return <Task\r\n                        key={task.id}\r\n                        task={task}\r\n                        toggleCompleted={toggleCompleted}\r\n                        editTask={editTask}\r\n                        deleteTask={deleteTask}\r\n                        color={task.color}\r\n                    />\r\n                })\r\n                    : <div className=\"tasklist__message\">~ No Tasks Added ~</div>\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport TaskForm from './components/TaskForm'\nimport TaskList from './components/TaskList'\nimport allColors from './components/allColors'\n\nfunction App() {\n  const savedTasks = localStorage.getItem('tasks') ? JSON.parse(localStorage.getItem('tasks')) : []\n\n  const [tasks, changeTasks] = useState(savedTasks)\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([])\n  const [colorSelected, setColorSelected] = useState(allColors.colors[0])\n\n  // Functions\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(tasks.filter((task) => task.completed === true))\n        break\n      case 'uncompleted':\n        setFilteredTodos(tasks.filter((task) => task.completed === false))\n        break\n      default:\n        setFilteredTodos(tasks)\n        break\n    }\n  }\n\n  // useEffect\n  useEffect(() => {\n    filterHandler()\n  }, [tasks, status])\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }, [tasks, status])\n\n  useEffect(() => {\n    localStorage.setItem('completed', JSON.stringify(filteredTodos))\n  }, [filteredTodos])\n\n  return (\n    <div className=\"container\">\n      <Header\n        setStatus={setStatus}\n      />\n      <TaskForm\n        tasks={tasks}\n        changeTasks={changeTasks}\n        colorSelected={colorSelected}\n        setColorSelected={setColorSelected}\n      />\n      <TaskList\n        tasks={tasks}\n        changeTasks={changeTasks}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}